import time
import random
import paho.mqtt.client as mqtt
from PyQt5.QtCore import QThread, pyqtSignal

class MQTTPublisherThread(QThread):
    update_signal = pyqtSignal(str)  # t√≠n hi·ªáu g·ª≠i d·ªØ li·ªáu ƒë·∫øn giao di·ªán

    def __init__(self, broker="localhost", port=1883, topic="iot/temperature"):
        super().__init__()
        self.broker = broker
        self.port = port
        self.topic = topic
        self.client = mqtt.Client(mqtt.CallbackAPIVersion.VERSION2)
        self.running = False # bi·∫øn ki·ªÉm so√°t tr·∫°ng th√°i c·ªßa ti·∫øn tr√¨nh

    def run(self):
        while not self.running:
            try:
                self.client.connect(self.broker, self.port, 60)
                self.client.loop_start()
                self.update_signal.emit("‚úÖ ƒê√£ k·∫øt n·ªëi MQTT Broker!")
                self.running = True
            except Exception as e:
                self.update_signal.emit(f"‚ùå L·ªói k·∫øt n·ªëi MQTT: {e}")
                time.sleep(5)  # Ch·ªù 5 gi√¢y tr∆∞·ªõc khi th·ª≠ l·∫°i

        while self.running:
            temperature = random.uniform(15, 40)
            try:
                self.client.publish(self.topic, temperature, retain=True)
                self.update_signal.emit(f"üì§ G·ª≠i nhi·ªát ƒë·ªô: {temperature:.2f}¬∞C")
            except Exception as e:
                self.update_signal.emit(f"‚ùå L·ªói g·ª≠i d·ªØ li·ªáu: {e}")
            time.sleep(2)  # G·ª≠i d·ªØ li·ªáu m·ªói 2s

    def stop(self):
        self.running = False
        self.client.loop_stop() 
        self.client.disconnect()
        self.quit()
        self.wait() 


"""
t√≥m t·∫Øt lu·ªìng ho·∫°t ƒë·ªông:
- kh·ªüi ƒë·ªông thread (run())
    th·ª≠ k·∫øt n·ªëi ƒë·∫øn MQTT Broker 
    n·∫øu th√†nh c√¥ng hi·ªÉn th·ªã th√¥ng b√°o k·∫øt n·ªëi th√†nh c√¥ng
    n·∫øu th·∫•t b·∫°i hi·ªÉn th·ªã th√¥ng b√°o k·∫øt n·ªëi th·∫•t b·∫°i v√† th·ª≠ l·∫°i sau 5s
- g·ª≠i d·ªØ li·ªáu nhi·∫øt ƒë·ªô
    g·ª≠i 1 gi√° tr·ªã nhi·ªát ƒë·ªô ng·∫´u nhi√™n t·ª´ 15 ƒë·∫øn 40 ƒë·ªô C sau m·ªói 2s
    n·∫øu g·ª≠i th√†nh c√¥ng hi·ªÉn th·ªã th√¥ng b√°o g·ª≠i th√†nh c√¥ng
    n·∫øu g·ª≠i th·∫•t b·∫°i hi·ªÉn th·ªã th√¥ng b√°o g·ª≠i th·∫•t b·∫°i
- d·ª´ng thread (stop())
    d·ª´ng v√≤ng l·∫∑p g·ª≠i d·ªØ li·ªáu
    d·ª´ng v√≤ng l·∫∑p MQTT v√† ng·∫Øt k·∫øt n·ªëi
    k·∫øt th√∫c ti·∫øn tr√¨nh thread
"""